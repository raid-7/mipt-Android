apply plugin: 'kotlin'
apply plugin: 'application'

group 'ru.raid.miptandroid'
version '0.0.1'
mainClassName = "io.ktor.server.netty.EngineMain"

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "io.ktor:ktor-gson:$ktor_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation "org.jetbrains.exposed:exposed-core:$exposed_version"
    implementation "org.jetbrains.exposed:exposed-dao:$exposed_version"
    implementation "org.jetbrains.exposed:exposed-jdbc:$exposed_version"
    implementation "org.xerial:sqlite-jdbc:3.30.1"
    implementation "org.postgresql:postgresql:42.2.12"


    implementation project(':data')

    testImplementation "io.ktor:ktor-server-tests:$ktor_version"
    testImplementation "com.h2database:h2:1.4.200"
}

jar {
    manifest {
        attributes "Main-Class": "$mainClassName"
    }
}

task fatJar(type: Jar) {
    archiveClassifier.set("all")
    manifest {
        attributes "Main-Class": "$mainClassName"
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}
